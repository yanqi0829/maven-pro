<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    上方一行是约束文件，
    mybatis-3-mapper.dtd是约束文件名称， dtd为扩展名
    作用：限制和检查当前文件中出现的标签，属性 必须符合mybatis的要求
-->

<mapper namespace="mybatis.dao.StudentDao">
    <!--    id表示执行sql的唯一标示，要求使用接口中的方法名
            resultType 表示结果类型，值写类型的全限定名称
            -->
    <select id="selectStudents" resultType="mybatis.domain.Student">




                                    select * from student




    </select>
    <insert id="insertStudent">
        <!--    #{} 为占位符 对应Student中的属性名-->
        insert into student values (#{id},#{name},#{email},#{age})
    </insert>
    <!--  parameterType:的值是java数据类型的全限定名称或mybatis定义的别名
           parameterType不是强制的，mybatis通过反射机制可以发现接口参数的类型，可以不写 -->
    <select id="selectById" resultType="mybatis.domain.Student" parameterType="Integer">
        <!-- mapper文件获取简单类型（基本类型和String）的一个参数的值，使用#{任意字符}-->
        select * from student where id=#{dddddddd}
    </select>


    <select id="selectMulitParam" resultType="mybatis.domain.Student">
                 select * from student where id=#{myid} or name=#{myname}
    </select>
    <!--    多个参数，使用java对象的属性值，作为参数实际值
            #｛属性名,javaType=类型名称，jdbcType=数据类型｝ 用的少
            使用简化的格式  #{属性名}， 类型通过反射可获取
    -->
    <select id="selectMulitObjetct" resultType="mybatis.domain.Student">
                 select * from student where id=#{idParam,javaType=java.lang.Integer，jdbcType=INTEGER} or
                 name=#{nameParam,javaType=java.lang.String，jdbcType=String}
    </select>
<!--··Map传参  使用#｛map 的key｝-->
    <select id="selectMulitMap" resultType="mybatis.domain.Student">
                 select * from student where id=#{mapId} or
                 name=#{mapName}
    </select>
<!--    使用resultMap
        1.定义 resultMap
        2.在select中使用 1定义的resultMap
-->
    <resultMap id="studentMap" type="mybatis.domain.Student" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="email" property="email" jdbcType="VARCHAR" />
    </resultMap>

    <select id="selectAll" resultMap="studentMap">
                 select * from student
    </select>
</mapper>